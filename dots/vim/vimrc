" vim-plug package manager -----------------------------

call plug#begin('~/.vim/plugged')

Plug 'w0rp/ale'
Plug 'editorconfig/editorconfig-vim'
Plug 'itchyny/lightline.vim'
Plug 'airblade/vim-gitgutter'
Plug 'lervag/vimtex'

"Plug 'junegunn/vim-easy-align'
"Plug 'tpope/vim-surround'
"Plug 'junegunn/goyo.vim'
"Plug 'junegunn/limelight.vim'

"call dein#add('Shougo/deoplete.nvim')
"if !has('nvim')
""  call dein#add('roxma/nvim-yarp')
""  call dein#add('roxma/vim-hug-neovim-rpc')
"endif

"Themes
Plug 'junegunn/seoul256.vim'
Plug 'dikiaap/minimalist'
Plug 'tomasr/molokai'
Plug 'joshdick/onedark.vim'

call plug#end()


" misc config -----------------------------

filetype plugin indent on

syntax enable

colorscheme onedark

hi clear SpellBad
hi SpellBad cterm=underline

autocmd BufRead,BufNewFile *.md setlocal spell
autocmd BufRead,BufNewFile *.tex setlocal spell

inoremap jk <esc>

inoremap <esc> <nop>
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>


" ale -----------------------------

let g:ale_linters = {
\   'tex': ['chktex', 'lacheck'],
\}

nmap <silent> <c-k> <Plug>(ale_previous_wrap)
nmap <silent> <c-j> <Plug>(ale_next_wrap)


" deoplete -----------------------------

"let g:deoplete#enable_at_startup = 1
"if !exists('g:deoplete#omni#input_patterns')
"	let g:deoplete#omni#input_patterns = {}
"endif
"let g:deoplete#omni#input_patterns.tex = g:vimtex#re#deoplete


" vimtex -----------------------------

let g:vimtex_view_method = 'skim'

let g:vimtex_compiler_latexmk = {
	\ 'backend' : 'jobs',
	\ 'continuous' : 0,
	\}

let g:vimtex_quickfix_autojump = 1

let g:vimtex_view_skim_hook_callback = 'ViewCallbackHook'
function! ViewCallbackHook()
	call b:vimtex.viewer.view('')
endfunction

nnoremap <c-d> :update<cr>:VimtexCompile<cr>
inoremap <c-d> <nop>
"inoremap <c-d> <esc>:update<cr>:VimtexCompile<cr>i
